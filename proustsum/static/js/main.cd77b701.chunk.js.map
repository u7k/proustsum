{"version":3,"sources":["marcel.jpg","proustsum-data.js","components/ParagCounter.jsx","components/CharSlider.jsx","components/GenerateView.jsx","components/OutputView.jsx","App.js","index.js"],"names":["allText","paragraphs","maxChars","length","useStyles","makeStyles","theme","button","backgroundColor","color","inactiveButton","borderColor","width","fontWeight","ParagCounter","paragCount","setParagCount","classes","ButtonGroup","disableElevation","variant","className","Button","name","onClick","disabled","numField","maxWidth","height","createButton","margin","CharSlider","charCount","setCharCount","TextField","id","type","inputProps","min","style","InputLabelProps","textAlign","marginLeft","display","shrink","value","onChange","event","newValue","target","NaN","match","nativeEvent","inputType","Number","InputStepIcon","breakpoints","down","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","Typography","GenerateView","React","useState","tabIndex","setTabIndex","tabProps","AppBar","position","Tabs","aria-label","Tab","label","newProustsum","newP","i","Math","floor","random","handleParags","substring","setGeneratedText","SaveStepIcon","OutputView","rows","rowsMax","placeholder","generatedText","navigator","clipboard","writeText","animateCheckmark","setInterval","showCheckmark","Zoom","in","transitionDelay","App","Grid","container","spacing","align","justify","fontSize","src","portrait","alt","Stepper","orientation","Step","expanded","active","StepLabel","StepIconComponent","StepContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd77b701.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marcel.da7fe873.jpg\";","export const initialText = `For a long time I would go to bed early. Sometimes, the candle barely out, my eyes closed so quickly that I did not have time to tell myself: “I’m falling asleep.” And half an hour later the thought that it was time to look for sleep would `;\n\nexport const allText = `For a long time I would go to bed early. Sometimes, the candle barely out, my eyes closed so quickly that I did not have time to tell myself: “I’m falling asleep.” And half an hour later the thought that it was time to look for sleep would awaken me; I would make as if to put away the book which I imagined was still in my hands, and to blow out the light; I had gone on thinking, while I was asleep, about what I had just been reading, but these thoughts had taken a rather peculiar turn; it seemed to me that I myself was the immediate subject of my book: a church, a quartet, the rivalry between François I and Charles V. This impression would persist for some moments after I awoke; it did not offend my reason, but lay like scales upon my eyes and prevented them from registering the fact that the candle was no longer burning. Then it would begin to seem unintelligible, as the thoughts of a previous existence must be after reincarnation; the subject of my book would separate itself from me, leaving me free to apply myself to it or not; and at the same time my sight would return and I would be astonished to find myself in a state of darkness, pleasant and restful enough for my eyes, but even more, perhaps, for my mind, to which it appeared incomprehensible, without a cause, something dark indeed.\n\nI would ask myself what time it could be; I could hear the whistling of trains, which, now nearer and now further off, punctuating the distance like the note of a bird in a forest, showed me in perspective the deserted countryside through which a traveller is hurrying towards the nearby station; and the path he is taking will be engraved in his memory by the excitement induced by strange surroundings, by unaccustomed activities, by the conversation he has had and the farewells exchanged beneath an unfamiliar lamp that still echo in his ears amid the silence of the night, and by the happy prospect of being home again.\n\nI would lay my cheeks gently against the comfortable cheeks of my pillow, as plump and fresh as the cheeks of childhood. I would strike a match to look at my watch. Nearly midnight. The hour when an invalid, who has been obliged to set out on a journey and to sleep in a strange hotel, awakened by a sudden spasm, sees with glad relief a streak of daylight showing under his door. Thank God, it is morning! The servants will be about in a minute: he can ring, and someone will come to look after him. The thought of being assuaged gives him strength to endure his pain. He is certain he heard footsteps: they come nearer, and then die away. The ray of light beneath his door is extinguished. It is midnight; someone has just turned down the gas; the last servant has gone to bed, and he must lie all night suffering without remedy.\n\nI would fall asleep again, and thereafter would reawaken for short snatches only, just long enough to hear the regular creaking of the wainscot, or to open my eyes to stare at the shifting kaleidoscope of the darkness, to savour, in a momentary glimmer of consciousness, the sleep which lay heavy upon the furniture, the room, that whole of which I formed no more than a small part and whose insensibility I should very soon return to share. Or else while sleeping I had drifted back to an earlier stage in my life, now for ever outgrown, and had come under the thrall of one of my childish terrors, such as that old terror of my great-uncle’s pulling my curls which was effectually dispelled on the day—the dawn of a new era to me—when they were finally cropped from my head. I had forgotten that event during my sleep, but I remembered it again immediately I had succeeded in waking myself up to escape my great-uncle’s fingers, and as a measure of precaution I would bury the whole of my head in the pillow before returning to the world of dreams.\n\nSometimes, too, as Eve was created from a rib of Adam, a woman would be born during my sleep from some misplacing of my thigh. Conceived from the pleasure I was on the point of enjoying, she it was, I imagined, who offered me that pleasure. My body, conscious that its own warmth was permeating hers, would strive to become one with her, and I would awake. The rest of humanity seemed very remote in comparison with this woman whose company I had left but a moment ago; my cheek was still warm from her kiss, my body ached beneath the weight of hers. If, as would sometimes happen, she had the features of some woman whom I had known in waking hours, I would abandon myself altogether to this end: to find her again, like people who set out on a journey to see with their eyes some city of their desire, and imagine that one can taste in reality what has charmed one’s fancy. And then, gradually, the memory of her would fade away, I had forgotten the girl of my dream.`;\n\nexport const paragraphs = [\n  `For a long time I would go to bed early. Sometimes, the candle barely out, my eyes closed so quickly that I did not have time to tell myself: “I’m falling asleep.” And half an hour later the thought that it was time to look for sleep would awaken me; I would make as if to put away the book which I imagined was still in my hands, and to blow out the light; I had gone on thinking, while I was asleep, about what I had just been reading, but these thoughts had taken a rather peculiar turn; it seemed to me that I myself was the immediate subject of my book: a church, a quartet, the rivalry between François I and Charles V. This impression would persist for some moments after I awoke; it did not offend my reason, but lay like scales upon my eyes and prevented them from registering the fact that the candle was no longer burning. Then it would begin to seem unintelligible, as the thoughts of a previous existence must be after reincarnation; the subject of my book would separate itself from me, leaving me free to apply myself to it or not; and at the same time my sight would return and I would be astonished to find myself in a state of darkness, pleasant and restful enough for my eyes, but even more, perhaps, for my mind, to which it appeared incomprehensible, without a cause, something dark indeed.`,\n  `I would ask myself what time it could be; I could hear the whistling of trains, which, now nearer and now further off, punctuating the distance like the note of a bird in a forest, showed me in perspective the deserted countryside through which a traveller is hurrying towards the nearby station; and the path he is taking will be engraved in his memory by the excitement induced by strange surroundings, by unaccustomed activities, by the conversation he has had and the farewells exchanged beneath an unfamiliar lamp that still echo in his ears amid the silence of the night, and by the happy prospect of being home again.`,\n  `I would lay my cheeks gently against the comfortable cheeks of my pillow, as plump and fresh as the cheeks of childhood. I would strike a match to look at my watch. Nearly midnight. The hour when an invalid, who has been obliged to set out on a journey and to sleep in a strange hotel, awakened by a sudden spasm, sees with glad relief a streak of daylight showing under his door. Thank God, it is morning! The servants will be about in a minute: he can ring, and someone will come to look after him. The thought of being assuaged gives him strength to endure his pain. He is certain he heard footsteps: they come nearer, and then die away. The ray of light beneath his door is extinguished. It is midnight; someone has just turned down the gas; the last servant has gone to bed, and he must lie all night suffering without remedy.`,\n  `I would fall asleep again, and thereafter would reawaken for short snatches only, just long enough to hear the regular creaking of the wainscot, or to open my eyes to stare at the shifting kaleidoscope of the darkness, to savour, in a momentary glimmer of consciousness, the sleep which lay heavy upon the furniture, the room, that whole of which I formed no more than a small part and whose insensibility I should very soon return to share. Or else while sleeping I had drifted back to an earlier stage in my life, now for ever outgrown, and had come under the thrall of one of my childish terrors, such as that old terror of my great-uncle’s pulling my curls which was effectually dispelled on the day—the dawn of a new era to me—when they were finally cropped from my head. I had forgotten that event during my sleep, but I remembered it again immediately I had succeeded in waking myself up to escape my great-uncle’s fingers, and as a measure of precaution I would bury the whole of my head in the pillow before returning to the world of dreams.`,\n  `Sometimes, too, as Eve was created from a rib of Adam, a woman would be born during my sleep from some misplacing of my thigh. Conceived from the pleasure I was on the point of enjoying, she it was, I imagined, who offered me that pleasure. My body, conscious that its own warmth was permeating hers, would strive to become one with her, and I would awake. The rest of humanity seemed very remote in comparison with this woman whose company I had left but a moment ago; my cheek was still warm from her kiss, my body ached beneath the weight of hers. If, as would sometimes happen, she had the features of some woman whom I had known in waking hours, I would abandon myself altogether to this end: to find her again, like people who set out on a journey to see with their eyes some city of their desire, and imagine that one can taste in reality what has charmed one’s fancy. And then, gradually, the memory of her would fade away, I had forgotten the girl of my dream.`,\n];\n\nexport const maxChars = allText.length;\nexport const maxParags = paragraphs.length;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    backgroundColor: \"#4a47a3\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#7868e6\",\n    },\n  },\n  inactiveButton: {\n    borderColor: \"#4a47a3\",\n    \"&:disabled\": {\n      borderColor: \"#4a47a3\",\n      width: \"3.5rem\",\n      fontWeight: \"600\",\n      color: \"#440a67\",\n    },\n  },\n}));\n\nconst ParagCounter = ({ paragCount, setParagCount }) => {\n  const classes = useStyles();\n\n  function reduceParags() {\n    const oldValue = paragCount;\n\n    if (oldValue > 1) {\n      setParagCount(oldValue - 1);\n    }\n  }\n\n  function increaseParags() {\n    const oldValue = paragCount;\n\n    if (oldValue < 10) {\n      setParagCount(oldValue + 1);\n    }\n  }\n\n  return (\n    <div>\n      <ButtonGroup\n        disableElevation\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"btn-group\"\n      >\n        <Button name=\"reduce\" className={classes.button} onClick={reduceParags}>\n          <RemoveIcon />\n        </Button>\n\n        <Button disabled variant=\"outlined\" className={classes.inactiveButton}>\n          {paragCount}\n        </Button>\n\n        <Button\n          name=\"increase\"\n          className={classes.button}\n          onClick={increaseParags}\n        >\n          <AddIcon />\n        </Button>\n      </ButtonGroup>\n\n      <h2 className=\"input-type-txt\">paragraphs</h2>\n    </div>\n  );\n};\n\nexport default ParagCounter;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { maxChars } from \"../proustsum-data\";\n\nconst useStyles = makeStyles((theme) => ({\n  numField: {\n    width: \"90%\",\n    maxWidth: \"400px\",\n    height: \"55px\",\n  },\n\n  createButton: {\n    backgroundColor: \"#4a47a3\",\n    color: \"white\",\n    width: \"90%\",\n    margin: \"30px auto 0px auto\",\n    \"&:hover\": {\n      backgroundColor: \"#7868e6\",\n    },\n  },\n}));\n\nconst CharSlider = ({ charCount, setCharCount }) => {\n  const classes = useStyles();\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    const numbers = /^[0-9]+$/;\n\n    if (charCount > maxChars) {\n      setCharCount(NaN);\n      setCharCount(maxChars);\n    } else if (newValue.match(numbers)) {\n      setCharCount(newValue);\n    } else if (\n      charCount.length === 1 &&\n      event.nativeEvent.inputType === \"deleteContentBackward\"\n    ) {\n      setCharCount(Number.NaN);\n    }\n  }\n\n  return (\n    <div className=\"slider-wrap\">\n      <TextField\n        id=\"outlined-number\"\n        type=\"number\"\n        inputProps={{ min: 0, style: { fontWeight: \"600\", color: \"#440a67\" } }}\n        InputLabelProps={{\n          min: 0,\n          style: {\n            textAlign: \"center\",\n            color: \"white\",\n            marginLeft: \"auto\",\n            display: \"block\",\n          },\n          shrink: true,\n        }}\n        variant=\"outlined\"\n        className={classes.numField}\n        value={charCount}\n        onChange={handleChange}\n      />\n\n      <h2 className=\"input-type-txt\">bytes</h2>\n    </div>\n  );\n};\n\nexport default CharSlider;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nimport PenIcon from \"@material-ui/icons/CreateRounded\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\n// RADIO BUTTONS\nimport ParagCounter from \"./ParagCounter\";\nimport CharSlider from \"./CharSlider\";\nimport Button from \"@material-ui/core/Button\";\nimport { allText, maxChars, paragraphs } from \"../proustsum-data\";\n\nexport function InputStepIcon() {\n  return (\n    <div className=\"step-icon-wrap\">\n      <PenIcon className=\"step-icon\" />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    backgroundColor: \"#4a47a3\",\n    fontWeight: \"500\",\n    color: \"white\",\n    width: \"300px\",\n    height: \"60px\",\n    margin: \"30px auto\",\n    \"&:hover\": {\n      backgroundColor: \"#7868e6\",\n    },\n    [theme.breakpoints.down(480)]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst GenerateView = (props) => {\n  const classes = useStyles();\n\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const [charCount, setCharCount] = useState(240);\n  const [paragCount, setParagCount] = useState(3);\n\n  function tabProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  const tabValueChanged = (event, newValue) => {\n    setTabIndex(newValue);\n  };\n\n  function updateText() {\n    const newProustsum = createProustsum();\n    props.setGeneratedText(newProustsum);\n  }\n\n  function createProustsum() {\n    if (tabIndex === 1) {\n      return handleParags();\n    } else {\n      return handleChars();\n    }\n  }\n\n  function handleChars() {\n    if (charCount > maxChars) {\n      setCharCount(maxChars);\n    }\n    const newP = allText.substring(0, charCount);\n    return newP;\n  }\n\n  function handleParags() {\n    var newP = ``;\n\n    for (var i = 0; i < paragCount; i++) {\n      if (i < paragraphs.length) {\n        newP += paragraphs[i];\n        if (i !== paragCount - 1) {\n          newP += \"\\n\\n\";\n        }\n      } else {\n        newP += paragraphs[Math.floor(Math.random() * paragraphs.length)];\n        if (i !== paragCount - 1) {\n          newP += \"\\n\\n\";\n        }\n      }\n    } //: LOOP\n    return newP;\n  }\n\n  return (\n    <div>\n      <div className=\"tabs-wrap\">\n        <AppBar position=\"static\" className=\"tab-bar\">\n          <Tabs\n            value={tabIndex}\n            onChange={tabValueChanged}\n            aria-label=\"simple tabs example\"\n            className=\"tabs-row\"\n          >\n            <Tab label=\"Character Count\" {...tabProps(0)} />\n            <Tab label=\"Paragraph Count\" {...tabProps(1)} />\n          </Tabs>\n        </AppBar>\n\n        <div className=\"tabs-content-wrap\">\n          <TabPanel value={tabIndex} index={0}>\n            <CharSlider charCount={charCount} setCharCount={setCharCount} />\n          </TabPanel>\n          <TabPanel value={tabIndex} index={1}>\n            <ParagCounter\n              paragCount={paragCount}\n              setParagCount={setParagCount}\n            />\n          </TabPanel>\n        </div>\n      </div>\n\n      <Button className={classes.button} onClick={updateText}>\n        GENERATE PROUSTSUM\n      </Button>\n    </div>\n  );\n};\n\nexport default GenerateView;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport SaveIcon from \"@material-ui/icons/SaveRounded\";\nimport Button from \"@material-ui/core/Button\";\nimport { Zoom } from \"@material-ui/core\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport function SaveStepIcon() {\n  return (\n    <div className=\"step-icon-wrap\">\n      <SaveIcon className=\"step-icon\" />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    backgroundColor: \"#4a47a3\",\n    fontWeight: \"500\",\n    color: \"white\",\n    width: \"300px\",\n    height: \"60px\",\n    margin: \"30px auto\",\n    \"&:hover\": {\n      backgroundColor: \"#7868e6\",\n    },\n    [theme.breakpoints.down(480)]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst OutputView = (props) => {\n  const classes = useStyles();\n\n  function copyText() {\n    navigator.clipboard.writeText(props.generatedText);\n\n    props.animateCheckmark(true);\n\n    setInterval(() => {\n      props.animateCheckmark(false);\n    }, 1000);\n  }\n\n  return (\n    <>\n      <TextArea\n        rows={2}\n        rowsMax={2}\n        aria-label=\"empty textarea\"\n        placeholder=\"Empty\"\n        value={props.generatedText}\n        className=\"textbox\"\n      />\n      <Button className={classes.button} onClick={copyText}>\n        {props.showCheckmark ? (\n          <Zoom\n            in={props.showCheckmark}\n            style={{ transitionDelay: props.showCheckmark ? \"40ms\" : \"0ms\" }}\n          >\n            <DoneIcon />\n          </Zoom>\n        ) : (\n          <p style={{ textAlign: \"center\" }}>COPY</p>\n        )}\n      </Button>\n    </>\n  );\n};\n\nexport default OutputView;\n","import \"./App.css\";\nimport portrait from \"./marcel.jpg\";\nimport React, { useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport BookIcon from \"@material-ui/icons/LibraryBooksRounded\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { initialText } from \"./proustsum-data\";\nimport GenerateView, { InputStepIcon } from \"./components/GenerateView\";\nimport OutputView, { SaveStepIcon } from \"./components/OutputView\";\n\nfunction App() {\n  const [generatedText, setGeneratedText] = useState(initialText);\n  const [showCheckmark, animateCheckmark] = useState(false);\n\n  return (\n    <Grid container spacing={0} align=\"center\" justify=\"center\">\n      <div className=\"content-wrap\">\n        <div className=\"header-wrap\">\n          <div className=\"title-wrap\">\n            <p>\n              <h1>\n                <BookIcon\n                  fontSize=\"large\"\n                  color=\"#1e212d\"\n                  className=\"book-icon\"\n                />{\" \"}\n                Proustsum\n              </h1>\n            </p>\n            <p>\n              <h2>Placeholder Text Generator</h2>\n            </p>\n          </div>\n          <img src={portrait} alt=\"\" />\n        </div>\n\n        <Stepper\n          orientation={\"vertical\"}\n          style={{ backgroundColor: \"transparent\" }}\n        >\n          {/* INPUTS */}\n          <Step expanded={true} active={true}>\n            <StepLabel\n              StepIconComponent={InputStepIcon}\n              key={0}\n              className=\"step-lbl\"\n            >\n              <span className=\"step-lbl-text\">Choose Length</span>\n            </StepLabel>\n\n            <StepContent>\n              <GenerateView setGeneratedText={setGeneratedText} />\n            </StepContent>\n          </Step>\n\n          {/* OUTPUT */}\n          <Step expanded={true} active={true}>\n            <StepLabel\n              StepIconComponent={SaveStepIcon}\n              key={1}\n              className=\"step-lbl\"\n            >\n              <span className=\"step-lbl-text\">Copy Your Text</span>\n            </StepLabel>\n\n            <StepContent>\n              <OutputView\n                generatedText={generatedText}\n                showCheckmark={showCheckmark}\n                animateCheckmark={animateCheckmark}\n              />\n            </StepContent>\n          </Step>\n        </Stepper>\n      </div>\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}